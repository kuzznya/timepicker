apiVersion: v1
kind: Service
metadata:
  name: kafka
  labels:
    app: kafka
spec:
  ports:
    - port: 9092
      name: kafkaport
  selector:
    app: redis

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka
  replicas: 1
  template:
    metadata:
      labels:
        app: kafka
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: zookeeper
          image: bitnami/kafka:2.8.1
          env:
            - name: KAFKA_BROKER_ID
              value: '1'
            - name: ALLOW_PLAINTEXT_LISTENER
              value: 'yes'
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: zookeeper:2181
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: CLIENT:PLAINTEXT,INTERNAL:PLAINTEXT
            - name: KAFKA_CFG_LISTENERS
              value: CLIENT://:9092,INTERNAL://:9093
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: CLIENT://kafka:9092,INTERNAL://kafka:9093
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: CLIENT
          ports:
            - containerPort: 9092
              name: kafkaport
          volumeMounts:
            - name: kafka-data
              mountPath: /bitnami
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 500Mi

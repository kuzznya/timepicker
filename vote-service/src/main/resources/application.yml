quarkus:
  application:
    name: vote-service
  http:
    port: ${PORT:8080}
    cors:
      ~: true
      origins: '*'
      methods: GET,POST,PUT,DELETE,OPTIONS
      headers: '*'
    auth:
      authenticated:
        paths: '/*'
        policy: authenticated
        auth-mechanism: bearer
  oidc:
    auth-server-url: ${KEYCLOAK_URL:http://localhost:8000/auth/realms/timepicker}
    application-type: service
    client-id: timepicker-backend
    credentials:
      secret: bf6cfb18-c502-4ad0-af8a-fbf7802b4d82
    tls:
      verification: none
  keycloak:
    policy-enforcer:
      enable: false
    devservices:
      enabled: false
  kafka:
    devservices:
      enabled: false
  cassandra:
    contact-points: localhost:9042
    local-datacenter: datacenter1
    keyspace: votes
    auth:
      username: cassandra
      password: cassandra
    init:
      eager-init: true
  container-image:
    image: ghcr.io/kuzznya/timepicker/vote-service:latest
    username: kuzznya
    password: ${GITHUB_TOKEN}


kafka:
  bootstrap:
    servers: localhost:9092

mp:
  messaging:
    incoming:
      votes:
        connector: smallrye-kafka
        topic: votes
        group:
          id: vote-service
        client:
          id: ${quarkus.uuid}
        key:
          deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value:
          deserializer: io.vertx.kafka.client.serialization.JsonObjectDeserializer
    outgoing:
      statistics:
        connector: smallrye-kafka
        topic: statistics
        key:
          serializer: org.apache.kafka.common.serialization.StringSerializer
        value:
          serializer: io.vertx.kafka.client.serialization.JsonObjectSerializer

"%dev":
  quarkus:
    log:
      console:
        json: false
